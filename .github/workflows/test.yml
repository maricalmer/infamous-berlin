name: Test

on: [push]

jobs:
  test:
    env:
      RAILS_ENV: test
      NODE_ENV: test
      CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      # Wait for PostgreSQL to be ready
      - name: Wait for PostgreSQL
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 -U postgres && break
            sleep 2
          done

      # Set up Ruby
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.3
          bundler-cache: true

      # Set up Node.js (if your project requires it for asset pipeline)
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '14.14.0'
          cache: yarn

      # Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
          yarn install --frozen-lockfile
          bundle install --jobs 4 --retry 3  # Ensure all gems, including rspec-rails, are installed

      # Set up the database
      - name: Database setup
        run: |
          cp config/database.github.yml config/database.yml
          bundle exec rails db:create
          bundle exec rails db:migrate

      # Run RSpec tests
      - name: Run tests
        run: |
          RAILS_ENV=test bundle exec rspec --format documentation --tag ~skip
